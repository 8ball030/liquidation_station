# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: liquidation_listener.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x1aliquidation_listener.proto\x12+aea.zarathustra.liquidation_listener.v0_1_0"\xc4\x10\n\x1aLiquidationListenerMessage\x12k\n\x05\x65rror\x18\x05 \x01(\x0b\x32Z.aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Error_PerformativeH\x00\x12\x83\x01\n\x11liquidation_event\x18\x06 \x01(\x0b\x32\x66.aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Liquidation_Event_PerformativeH\x00\x12\x9f\x01\n\x1fsubscribe_to_liquidation_events\x18\x07 \x01(\x0b\x32t.aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Subscribe_To_Liquidation_Events_PerformativeH\x00\x12\xa7\x01\n#unsubscribe_from_liquidation_events\x18\x08 \x01(\x0b\x32x.aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Unsubscribe_From_Liquidation_Events_PerformativeH\x00\x12y\n\x0cunsubscribed\x18\t \x01(\x0b\x32\x61.aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Unsubscribed_PerformativeH\x00\x1a\xc5\x01\n\tErrorCode\x12s\n\nerror_code\x18\x01 \x01(\x0e\x32_.aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.ErrorCode.ErrorCodeEnum"C\n\rErrorCodeEnum\x12\x17\n\x13\x46\x41ILED_TO_SUBSCRIBE\x10\x00\x12\x19\n\x15\x46\x41ILED_TO_UNSUBSCRIBE\x10\x01\x1a\x94\x02\n\x08Protocol\x12o\n\x08protocol\x18\x01 \x01(\x0e\x32].aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Protocol.ProtocolEnum"\x96\x01\n\x0cProtocolEnum\x12\x0e\n\nUNISWAP_V2\x10\x00\x12\x0e\n\nUNISWAP_V3\x10\x01\x12\r\n\tSUSHISWAP\x10\x02\x12\x08\n\x04\x41\x41VE\x10\x03\x12\x08\n\x04WETH\x10\x04\x12\t\n\x05\x43URVE\x10\x05\x12\x0b\n\x07ZERO_EX\x10\x06\x12\x0f\n\x0b\x42\x41LANCER_V1\x10\x07\x12\x0f\n\x0b\x43OMPOUND_V2\x10\x08\x12\t\n\x05\x43REAM\x10\t\x1a.\n,Subscribe_To_Liquidation_Events_Performative\x1a\x32\n0Unsubscribe_From_Liquidation_Events_Performative\x1a\xb9\x03\n\x1eLiquidation_Event_Performative\x12\x17\n\x0fliquidated_user\x18\x01 \x01(\t\x12\x17\n\x0fliquidator_user\x18\x02 \x01(\t\x12 \n\x18\x63ollateral_token_address\x18\x03 \x01(\t\x12\x1a\n\x12\x64\x65\x62t_token_address\x18\x04 \x01(\t\x12\x1c\n\x14\x64\x65\x62t_purchase_amount\x18\x05 \x01(\x05\x12\x17\n\x0freceived_amount\x18\x06 \x01(\x05\x12\x1e\n\x16received_token_address\x18\x07 \x01(\t\x12%\n\x1dreceived_token_address_is_set\x18\x08 \x01(\x08\x12\x62\n\x08protocol\x18\t \x01(\x0b\x32P.aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Protocol\x12\x18\n\x10transaction_hash\x18\n \x01(\t\x12\x15\n\rtrace_address\x18\x0b \x03(\x05\x12\x14\n\x0c\x62lock_number\x18\x0c \x01(\t\x1a\x1b\n\x19Unsubscribed_Performative\x1a\xbf\x02\n\x12\x45rror_Performative\x12\x65\n\nerror_code\x18\x01 \x01(\x0b\x32Q.aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.ErrorCode\x12\x11\n\terror_msg\x18\x02 \x01(\t\x12}\n\nerror_data\x18\x03 \x03(\x0b\x32i.aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Error_Performative.ErrorDataEntry\x1a\x30\n\x0e\x45rrorDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\x0e\n\x0cperformativeb\x06proto3'
)


_LIQUIDATIONLISTENERMESSAGE = DESCRIPTOR.message_types_by_name[
    "LiquidationListenerMessage"
]
_LIQUIDATIONLISTENERMESSAGE_ERRORCODE = (
    _LIQUIDATIONLISTENERMESSAGE.nested_types_by_name["ErrorCode"]
)
_LIQUIDATIONLISTENERMESSAGE_PROTOCOL = _LIQUIDATIONLISTENERMESSAGE.nested_types_by_name[
    "Protocol"
]
_LIQUIDATIONLISTENERMESSAGE_SUBSCRIBE_TO_LIQUIDATION_EVENTS_PERFORMATIVE = (
    _LIQUIDATIONLISTENERMESSAGE.nested_types_by_name[
        "Subscribe_To_Liquidation_Events_Performative"
    ]
)
_LIQUIDATIONLISTENERMESSAGE_UNSUBSCRIBE_FROM_LIQUIDATION_EVENTS_PERFORMATIVE = (
    _LIQUIDATIONLISTENERMESSAGE.nested_types_by_name[
        "Unsubscribe_From_Liquidation_Events_Performative"
    ]
)
_LIQUIDATIONLISTENERMESSAGE_LIQUIDATION_EVENT_PERFORMATIVE = (
    _LIQUIDATIONLISTENERMESSAGE.nested_types_by_name["Liquidation_Event_Performative"]
)
_LIQUIDATIONLISTENERMESSAGE_UNSUBSCRIBED_PERFORMATIVE = (
    _LIQUIDATIONLISTENERMESSAGE.nested_types_by_name["Unsubscribed_Performative"]
)
_LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE = (
    _LIQUIDATIONLISTENERMESSAGE.nested_types_by_name["Error_Performative"]
)
_LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE_ERRORDATAENTRY = (
    _LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE.nested_types_by_name[
        "ErrorDataEntry"
    ]
)
_LIQUIDATIONLISTENERMESSAGE_ERRORCODE_ERRORCODEENUM = (
    _LIQUIDATIONLISTENERMESSAGE_ERRORCODE.enum_types_by_name["ErrorCodeEnum"]
)
_LIQUIDATIONLISTENERMESSAGE_PROTOCOL_PROTOCOLENUM = (
    _LIQUIDATIONLISTENERMESSAGE_PROTOCOL.enum_types_by_name["ProtocolEnum"]
)
LiquidationListenerMessage = _reflection.GeneratedProtocolMessageType(
    "LiquidationListenerMessage",
    (_message.Message,),
    {
        "ErrorCode": _reflection.GeneratedProtocolMessageType(
            "ErrorCode",
            (_message.Message,),
            {
                "DESCRIPTOR": _LIQUIDATIONLISTENERMESSAGE_ERRORCODE,
                "__module__": "liquidation_listener_pb2"
                # @@protoc_insertion_point(class_scope:aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.ErrorCode)
            },
        ),
        "Protocol": _reflection.GeneratedProtocolMessageType(
            "Protocol",
            (_message.Message,),
            {
                "DESCRIPTOR": _LIQUIDATIONLISTENERMESSAGE_PROTOCOL,
                "__module__": "liquidation_listener_pb2"
                # @@protoc_insertion_point(class_scope:aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Protocol)
            },
        ),
        "Subscribe_To_Liquidation_Events_Performative": _reflection.GeneratedProtocolMessageType(
            "Subscribe_To_Liquidation_Events_Performative",
            (_message.Message,),
            {
                "DESCRIPTOR": _LIQUIDATIONLISTENERMESSAGE_SUBSCRIBE_TO_LIQUIDATION_EVENTS_PERFORMATIVE,
                "__module__": "liquidation_listener_pb2"
                # @@protoc_insertion_point(class_scope:aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Subscribe_To_Liquidation_Events_Performative)
            },
        ),
        "Unsubscribe_From_Liquidation_Events_Performative": _reflection.GeneratedProtocolMessageType(
            "Unsubscribe_From_Liquidation_Events_Performative",
            (_message.Message,),
            {
                "DESCRIPTOR": _LIQUIDATIONLISTENERMESSAGE_UNSUBSCRIBE_FROM_LIQUIDATION_EVENTS_PERFORMATIVE,
                "__module__": "liquidation_listener_pb2"
                # @@protoc_insertion_point(class_scope:aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Unsubscribe_From_Liquidation_Events_Performative)
            },
        ),
        "Liquidation_Event_Performative": _reflection.GeneratedProtocolMessageType(
            "Liquidation_Event_Performative",
            (_message.Message,),
            {
                "DESCRIPTOR": _LIQUIDATIONLISTENERMESSAGE_LIQUIDATION_EVENT_PERFORMATIVE,
                "__module__": "liquidation_listener_pb2"
                # @@protoc_insertion_point(class_scope:aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Liquidation_Event_Performative)
            },
        ),
        "Unsubscribed_Performative": _reflection.GeneratedProtocolMessageType(
            "Unsubscribed_Performative",
            (_message.Message,),
            {
                "DESCRIPTOR": _LIQUIDATIONLISTENERMESSAGE_UNSUBSCRIBED_PERFORMATIVE,
                "__module__": "liquidation_listener_pb2"
                # @@protoc_insertion_point(class_scope:aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Unsubscribed_Performative)
            },
        ),
        "Error_Performative": _reflection.GeneratedProtocolMessageType(
            "Error_Performative",
            (_message.Message,),
            {
                "ErrorDataEntry": _reflection.GeneratedProtocolMessageType(
                    "ErrorDataEntry",
                    (_message.Message,),
                    {
                        "DESCRIPTOR": _LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE_ERRORDATAENTRY,
                        "__module__": "liquidation_listener_pb2"
                        # @@protoc_insertion_point(class_scope:aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Error_Performative.ErrorDataEntry)
                    },
                ),
                "DESCRIPTOR": _LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE,
                "__module__": "liquidation_listener_pb2"
                # @@protoc_insertion_point(class_scope:aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage.Error_Performative)
            },
        ),
        "DESCRIPTOR": _LIQUIDATIONLISTENERMESSAGE,
        "__module__": "liquidation_listener_pb2"
        # @@protoc_insertion_point(class_scope:aea.zarathustra.liquidation_listener.v0_1_0.LiquidationListenerMessage)
    },
)
_sym_db.RegisterMessage(LiquidationListenerMessage)
_sym_db.RegisterMessage(LiquidationListenerMessage.ErrorCode)
_sym_db.RegisterMessage(LiquidationListenerMessage.Protocol)
_sym_db.RegisterMessage(
    LiquidationListenerMessage.Subscribe_To_Liquidation_Events_Performative
)
_sym_db.RegisterMessage(
    LiquidationListenerMessage.Unsubscribe_From_Liquidation_Events_Performative
)
_sym_db.RegisterMessage(LiquidationListenerMessage.Liquidation_Event_Performative)
_sym_db.RegisterMessage(LiquidationListenerMessage.Unsubscribed_Performative)
_sym_db.RegisterMessage(LiquidationListenerMessage.Error_Performative)
_sym_db.RegisterMessage(LiquidationListenerMessage.Error_Performative.ErrorDataEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    _LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE_ERRORDATAENTRY._options = None
    _LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE_ERRORDATAENTRY._serialized_options = (
        b"8\001"
    )
    _LIQUIDATIONLISTENERMESSAGE._serialized_start = 76
    _LIQUIDATIONLISTENERMESSAGE._serialized_end = 2192
    _LIQUIDATIONLISTENERMESSAGE_ERRORCODE._serialized_start = 805
    _LIQUIDATIONLISTENERMESSAGE_ERRORCODE._serialized_end = 1002
    _LIQUIDATIONLISTENERMESSAGE_ERRORCODE_ERRORCODEENUM._serialized_start = 935
    _LIQUIDATIONLISTENERMESSAGE_ERRORCODE_ERRORCODEENUM._serialized_end = 1002
    _LIQUIDATIONLISTENERMESSAGE_PROTOCOL._serialized_start = 1005
    _LIQUIDATIONLISTENERMESSAGE_PROTOCOL._serialized_end = 1281
    _LIQUIDATIONLISTENERMESSAGE_PROTOCOL_PROTOCOLENUM._serialized_start = 1131
    _LIQUIDATIONLISTENERMESSAGE_PROTOCOL_PROTOCOLENUM._serialized_end = 1281
    _LIQUIDATIONLISTENERMESSAGE_SUBSCRIBE_TO_LIQUIDATION_EVENTS_PERFORMATIVE._serialized_start = (
        1283
    )
    _LIQUIDATIONLISTENERMESSAGE_SUBSCRIBE_TO_LIQUIDATION_EVENTS_PERFORMATIVE._serialized_end = (
        1329
    )
    _LIQUIDATIONLISTENERMESSAGE_UNSUBSCRIBE_FROM_LIQUIDATION_EVENTS_PERFORMATIVE._serialized_start = (
        1331
    )
    _LIQUIDATIONLISTENERMESSAGE_UNSUBSCRIBE_FROM_LIQUIDATION_EVENTS_PERFORMATIVE._serialized_end = (
        1381
    )
    _LIQUIDATIONLISTENERMESSAGE_LIQUIDATION_EVENT_PERFORMATIVE._serialized_start = 1384
    _LIQUIDATIONLISTENERMESSAGE_LIQUIDATION_EVENT_PERFORMATIVE._serialized_end = 1825
    _LIQUIDATIONLISTENERMESSAGE_UNSUBSCRIBED_PERFORMATIVE._serialized_start = 1827
    _LIQUIDATIONLISTENERMESSAGE_UNSUBSCRIBED_PERFORMATIVE._serialized_end = 1854
    _LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE._serialized_start = 1857
    _LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE._serialized_end = 2176
    _LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE_ERRORDATAENTRY._serialized_start = (
        2128
    )
    _LIQUIDATIONLISTENERMESSAGE_ERROR_PERFORMATIVE_ERRORDATAENTRY._serialized_end = 2176
# @@protoc_insertion_point(module_scope)
